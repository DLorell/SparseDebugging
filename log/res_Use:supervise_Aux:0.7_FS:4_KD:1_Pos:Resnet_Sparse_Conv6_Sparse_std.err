Traceback (most recent call last):
  File "/home-nfs/lorell/miniconda3/envs/baby/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home-nfs/lorell/miniconda3/envs/baby/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home-nfs/lorell/tmpgit/SparseDebugging/src/__main__.py", line 33, in <module>
    main()
  File "/home-nfs/lorell/tmpgit/SparseDebugging/src/__main__.py", line 30, in main
    run(depth=args.depth, augmentation=args.aug, mparams=args.mparams, position=args.position, fsmult=args.fsmult, kdiv=args.kdiv, auxweight=args.auxweight, loadmodel=args.load, usecase=args.usecase, prefix=args.prefix)
  File "/home-nfs/lorell/tmpgit/SparseDebugging/src/app.py", line 93, in run
    train_epochs(EPOCHS, auxweight, model, trainloader, testloader, criterion, optimizer, LRDROPS, LRFACTOR, TAG, usecase, loadmodel=loadmodel)
  File "/home-nfs/lorell/tmpgit/SparseDebugging/src/app.py", line 169, in train_epochs
    avg_train_loss, grads, mags = train_epoch(model, auxweight, trainloader, criterion, optimizer, usecase)
  File "/home-nfs/lorell/tmpgit/SparseDebugging/src/app.py", line 280, in train_epoch
    logits, preds, aux_loss = model(x)
  File "/home-nfs/lorell/miniconda3/envs/baby/lib/python3.7/site-packages/torch/nn/modules/module.py", line 532, in __call__
    result = self.forward(*input, **kwargs)
  File "/home-nfs/lorell/tmpgit/SparseDebugging/src/resnets.py", line 237, in forward
    output, aux_loss_1 = self.conv1(x)
  File "/home-nfs/lorell/miniconda3/envs/baby/lib/python3.7/site-packages/torch/nn/modules/module.py", line 532, in __call__
    result = self.forward(*input, **kwargs)
  File "/home-nfs/lorell/tmpgit/SparseDebugging/src/models.py", line 333, in forward
    aux_loss = self.mse(self.embiggen(x.detach(), aux).detach(), aux)
  File "/home-nfs/lorell/tmpgit/SparseDebugging/src/models.py", line 306, in embiggen
    padded[:, :, self.padding:-self.padding, self.padding:-self.padding] = x
RuntimeError: The expanded size of the tensor (31) must match the existing size (32) at non-singleton dimension 3.  Target sizes: [128, 3, 31, 31].  Tensor sizes: [128, 3, 32, 32]
